// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using win_crud.Model.Context;

#nullable disable

namespace win_crud.Migrations
{
    [DbContext(typeof(SQLServerContext))]
    [Migration("20240525061827_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("win_crud.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "São Paulo",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4898),
                            Number = "123",
                            PersonId = 1,
                            State = "São Paulo",
                            Street = "Rua A",
                            UF = "SP",
                            ZipCode = "01010-010"
                        },
                        new
                        {
                            Id = 2,
                            City = "Rio de Janeiro",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4899),
                            Number = "456",
                            PersonId = 2,
                            State = "Rio de Janeiro",
                            Street = "Rua B",
                            UF = "RJ",
                            ZipCode = "02020-020"
                        },
                        new
                        {
                            Id = 3,
                            City = "Belo Horizonte",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4901),
                            Number = "789",
                            PersonId = 3,
                            State = " Minas Gerais",
                            Street = "Rua C",
                            UF = "MG",
                            ZipCode = "03030-030"
                        },
                        new
                        {
                            Id = 4,
                            City = "Curitiba",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4902),
                            Number = "1011",
                            PersonId = 4,
                            State = "Paraná",
                            Street = "Rua D",
                            UF = "PR",
                            ZipCode = "04040-040"
                        },
                        new
                        {
                            Id = 5,
                            City = "Porto Alegre",
                            Country = "Brasil",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4903),
                            Number = "1213",
                            PersonId = 5,
                            State = "Rio Grande do Sul",
                            Street = "Rua E",
                            UF = "RS",
                            ZipCode = "05050-050"
                        });
                });

            modelBuilder.Entity("win_crud.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CelPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            CPF = "123.456.789-01",
                            CelPhone = "11984763130",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4795),
                            Email = "joao.silva@example.com",
                            FirstName = "João",
                            LastName = "Silva",
                            Phone = "1156794477"
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            CPF = "987.654.321-02",
                            CelPhone = "11987537480",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4797),
                            Email = "maria.santos@example.com",
                            FirstName = "Maria",
                            LastName = "Santos",
                            Phone = "1156794477"
                        },
                        new
                        {
                            Id = 3,
                            Age = 40,
                            CPF = "111.222.333-03",
                            CelPhone = "11984933130",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4798),
                            Email = "pedro.oliveira@example.com",
                            FirstName = "Pedro",
                            LastName = "Oliveira",
                            Phone = "1156794477"
                        },
                        new
                        {
                            Id = 4,
                            Age = 35,
                            CPF = "444.555.666-04",
                            CelPhone = "11987558130",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4799),
                            Email = "ana.pereira@example.com",
                            FirstName = "Ana",
                            LastName = "Pereira",
                            Phone = "1156794477"
                        },
                        new
                        {
                            Id = 5,
                            Age = 28,
                            CPF = "777.888.999-05",
                            CelPhone = "11946833130",
                            CreatedAt = new DateTime(2024, 5, 25, 3, 18, 27, 534, DateTimeKind.Local).AddTicks(4821),
                            Email = "carlos.souza@example.com",
                            FirstName = "Carlos",
                            LastName = "Souza",
                            Phone = "1156794477"
                        });
                });

            modelBuilder.Entity("win_crud.Model.Address", b =>
                {
                    b.HasOne("win_crud.Model.Person", "Person")
                        .WithOne("Address")
                        .HasForeignKey("win_crud.Model.Address", "PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("win_crud.Model.Person", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
